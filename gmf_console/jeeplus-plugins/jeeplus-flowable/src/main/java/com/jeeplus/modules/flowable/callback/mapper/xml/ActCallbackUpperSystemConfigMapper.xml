<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.flowable.callback.mapper.ActCallbackUpperSystemConfigMapper">

	<sql id="actCallbackUpperSystemConfigColumns">
		a.id AS "id",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		a.oa_key AS "oaKey",
		a.url AS "url",
		a.param_list AS "paramList"
	</sql>

	<sql id="actCallbackUpperSystemConfigJoins">

	</sql>


	<select id="get" resultType="ActCallbackUpperSystemConfig" >
		SELECT
			<include refid="actCallbackUpperSystemConfigColumns"/>
		FROM act_callback_upper_system_config a
		<include refid="actCallbackUpperSystemConfigJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="findList" resultType="ActCallbackUpperSystemConfig" >
		SELECT
			<include refid="actCallbackUpperSystemConfigColumns"/>
		FROM act_callback_upper_system_config a
		<include refid="actCallbackUpperSystemConfigJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			<if test="oaKey != null and oaKey != ''">
				AND a.oa_key LIKE
				    <if test="_databaseId == 'postgre'">'%'||#{oaKey}||'%'</if>
					<if test="_databaseId == 'oracle'">'%'||#{oaKey}||'%'</if>
					<if test="_databaseId == 'mssql'">'%'+#{oaKey}+'%'</if>
					<if test="_databaseId == 'mysql'">concat('%',#{oaKey},'%')</if>
			</if>
			<if test="url != null and url != ''">
				AND a.url LIKE
				    <if test="_databaseId == 'postgre'">'%'||#{url}||'%'</if>
					<if test="_databaseId == 'oracle'">'%'||#{url}||'%'</if>
					<if test="_databaseId == 'mssql'">'%'+#{url}+'%'</if>
					<if test="_databaseId == 'mysql'">concat('%',#{url},'%')</if>
			</if>
			<if test="paramList != null and paramList != ''">
				AND a.param_list LIKE
				    <if test="_databaseId == 'postgre'">'%'||#{paramList}||'%'</if>
					<if test="_databaseId == 'oracle'">'%'||#{paramList}||'%'</if>
					<if test="_databaseId == 'mssql'">'%'+#{paramList}+'%'</if>
					<if test="_databaseId == 'mysql'">concat('%',#{paramList},'%')</if>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	
	<select id="findListByOaKey" resultType="ActCallbackUpperSystemConfig" >
		SELECT
			<include refid="actCallbackUpperSystemConfigColumns"/>
		FROM act_callback_upper_system_config a
		<include refid="actCallbackUpperSystemConfigJoins"/>
		<where>
		 a.del_flag = '0'
		 and a.oa_key = #{oaKey} 
		</where>
	</select>

	<select id="findAllList" resultType="ActCallbackUpperSystemConfig" >
		SELECT
			<include refid="actCallbackUpperSystemConfigColumns"/>
		FROM act_callback_upper_system_config a
		<include refid="actCallbackUpperSystemConfigJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<insert id="insert">
		INSERT INTO act_callback_upper_system_config(
			id,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag,
			oa_key,
			url,
			param_list
		) VALUES (
			#{id},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag},
			#{oaKey},
			#{url},
			#{paramList}
		)
	</insert>

	<update id="update">
		UPDATE act_callback_upper_system_config SET
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			oa_key = #{oaKey},
			url = #{url},
			param_list = #{paramList}
		WHERE id = #{id}
	</update>


	<!--物理删除-->
	<update id="delete">
		DELETE FROM act_callback_upper_system_config
		WHERE id = #{id}
	</update>

	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE act_callback_upper_system_config SET
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>


	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="ActCallbackUpperSystemConfig" statementType="STATEMENT">
		select * FROM act_callback_upper_system_config  where ${propertyName} = '${value}'
	</select>

</mapper>